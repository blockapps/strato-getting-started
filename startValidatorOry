#!/bin/bash

set -e
set -o pipefail


#######################
# Change these values #
#######################

password="blockapps"
vaultPassword="abcd"
email="test@email.com"
username="testuser"

domain_name=localhost

ssl_dir=~/BlockApps/strato-getting-started/ssl

identity_server_url="<FILL-ME-WITH-DEFAULT>"
#########################################################
# done modifying, don't change anything below this line #
#########################################################

oryBaseURL="https://${domain_name}:8443"
vaultURL="https://${domain_name}:8043"
stratoURL="https://${domain_name}"

if [ -d ory ]; then
  sudo rm -rf ory
fi

ory-init ory --ssldir=${ssl_dir} --domainname=${domain_name}

( cd ory && docker compose up -d )

sleep 10

########################################
# Populate Ory, create client and user #
########################################

hydraAdminIPAddress=`docker network inspect ory_default | jq -r ' .[].Containers[] | select(.Name=="ory-hydra-1").IPv4Address ' | perl -pe "s/\/.*//"`
kratosAdminIPAddress=`docker network inspect ory_default | jq -r ' .[].Containers[] | select(.Name=="ory-kratos-1").IPv4Address ' | perl -pe "s/\/.*//"`
oryAdminBaseURL=http://$hydraAdminIPAddress:4445
kratosAdminBaseURL=http://$kratosAdminIPAddress:4434

echo "oryAdminBaseURL=$oryAdminBaseURL"
echo "kratosAdminBaseURL=$kratosAdminBaseURL"



curl $oryAdminBaseURL/admin/clients

client=`curl -d '{"client_id": "'$domain_name'", "grant_types": ["client_credentials", "authorization_code"], "redirect_uris": ["'$stratoURL'/auth/openidc/return"], "post_logout_redirect_uris": ["'$stratoURL'/"], "token_endpoint_auth_method":"client_secret_basic", "scope": "openid email profile"}' $oryAdminBaseURL/admin/clients`

user=`curl -d '{"credentials":{"password": {"config": {"password": "'$password'"}}}, "traits": {"email": "'$email'", "username": "'$username'"}}' $kratosAdminBaseURL/admin/identities`

echo "======================="

echo -n "user created: "
echo $user | jq ".credentials.password.identifiers"

client_id=`echo $client | perl -pe "s/.*\"client_id\"://" | perl -pe "s/,.*//" | perl -pe "s/\"//g"`

client_secret=`echo $client | perl -pe "s/.*\"client_secret\"://" | perl -pe "s/,.*//" | perl -pe "s/\"//g"`

echo "client_id: $client_id"
echo "client_secret: $client_secret"

sleep 3

# you can cat a token this way:
curl --fail -u "$client_id:$client_secret" -d "grant_type=client_credentials" $oryBaseURL/oauth2/token | jq .

oauthDiscovery=$oryBaseURL/.well-known/openid-configuration

###############
# Start Vault #
###############

echo "HTTP_PORT=8000 \\
    ssl=true \\
    HTTPS_PORT=8043 \\
    INITIAL_OAUTH_DISCOVERY_URL='${oauthDiscovery}' \\
    INITIAL_OAUTH_ISSUER='${oryBaseURL}' \\
    PASSWORD='${vaultPassword}' \\
    ./vault" > vault-run.sh
chmod +x vault-run.sh
./vault-run.sh

################
# Start STRATO #
################

sleep 10

echo "NODE_HOST='${domain_name}' \\
  ssl="true" \\
  OAUTH_DISCOVERY_URL='${oauthDiscovery}' \\
  OAUTH_CLIENT_ID='${client_id}' \\
  OAUTH_CLIENT_SECRET='${client_secret}' \\
  VAULT_URL='${vaultURL}' \\
  SSL_CERT='${ssl_dir}/certs/server.pem' \\
  idServerUrl='http://172.17.0.1:8031' \\
  ./strato" > strato-run.sh
chmod +x strato-run.sh
./strato-run.sh

#################
# Register Cert #
#################

sleep 10
postIdentityReq=`docker exec strato-strato-1 x509-sign-subject -s /var/lib/strato/ssl.pem`
nodeCert=`curl --fail "${identity_server_url}/identity" -X PUT -d "$(echo "${postIdentityReq}" | jq -c .)" -H "Content-type: application/json"`
echo "${nodeCert}"
###################
# Start ID Server #
###################

sleep 10

echo "${nodeCert}" | perl -pe 's/\\n/\n/g; s/"//g' > identity-provider/certs/rootCert.pem
echo "HTTP_PORT=8031 \\
  OAUTH_DISCOVERY_URL='${oauthDiscovery}' \\
  OAUTH_CLIENT_ID='${client_id}' \\
  OAUTH_CLIENT_SECRET='${client_secret}' \\
  VAULT_URL='${vaultURL}' \\
  NODE_URL='https://${domain_name}' \\
  ./identity" > identity-run.sh
chmod +x identity-run.sh
./identity-run.sh
